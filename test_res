Testing arraylist
==[arraylist]== Memcheck, a memory error detector
==[arraylist]== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==[arraylist]== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==[arraylist]== Command: ./bin/arraylist
==[arraylist]== 
__ funcs list __
size: 2 - capacity: 2 
3 - 4
5 - 3

__ points list __
sizeof Point 16 
8 - 4
9 - 5
8 - 4

__ fixed size strings list __
size 0 - capacity 2 
hello
world
fixed string
dynamic string
hello

fixed string
dynamic string
size 4 - capacity 5 

__ dynamic size strings list __
size: 4 - capacity: 4
size: 4 - capacity: 10
0 - hello
1 - world
2 - hello
3 - world
4 - f string
5 - d string
__ after remove __
0 - hello
2 - hello
3 - world
4 - f string
5 - d string
size: 6 - capacity: 10
----integers_list ----
2 - 3 - 4 - 5 - 
------------------- Integers giterator
2 - 3 - 4 - 5 - 
5 - 4 - 3 - 2 - 
==[arraylist]== 
==[arraylist]== HEAP SUMMARY:
==[arraylist]==     in use at exit: 0 bytes in 0 blocks
==[arraylist]==   total heap usage: 25 allocs, 25 frees, 4,864 bytes allocated
==[arraylist]== 
==[arraylist]== All heap blocks were freed -- no leaks are possible
==[arraylist]== 
==[arraylist]== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

********************************************************************************
Testing arraystack
==[arraystack]== Memcheck, a memory error detector
==[arraystack]== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==[arraystack]== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==[arraystack]== Command: ./bin/arraystack
==[arraystack]== 
world
hello
world
hello
world
hello
==[arraystack]== 
==[arraystack]== HEAP SUMMARY:
==[arraystack]==     in use at exit: 0 bytes in 0 blocks
==[arraystack]==   total heap usage: 3 allocs, 3 frees, 4,186 bytes allocated
==[arraystack]== 
==[arraystack]== All heap blocks were freed -- no leaks are possible
==[arraystack]== 
==[arraystack]== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

********************************************************************************
Testing circular_array
==[circular_array]== Memcheck, a memory error detector
==[circular_array]== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==[circular_array]== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==[circular_array]== Command: ./bin/circular_array
==[circular_array]== 
carray size : 9
carray cap : 10
error : No buffer space available
0 -> 2 
1 -> 3 
2 -> 4 
3 -> 5 
4 -> 6 
5 -> 7 
6 -> 8 
7 -> 9 
8 -> 10 
carray size : 0
carray cap : 10
0 -> 0 
1 -> 1 
2 -> 2 
3 -> 3 
4 -> 4 
5 -> 5 
6 -> 6 
7 -> 7 
8 -> 8 
9 -> 23 
10 -> 0 
carray size : 0
carray cap : 10
==[circular_array]== 
==[circular_array]== HEAP SUMMARY:
==[circular_array]==     in use at exit: 0 bytes in 0 blocks
==[circular_array]==   total heap usage: 4 allocs, 4 frees, 4,158 bytes allocated
==[circular_array]== 
==[circular_array]== All heap blocks were freed -- no leaks are possible
==[circular_array]== 
==[circular_array]== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

********************************************************************************
Testing linkedlist
==[linkedlist]== Memcheck, a memory error detector
==[linkedlist]== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==[linkedlist]== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==[linkedlist]== Command: ./bin/linkedlist
==[linkedlist]== 
------------------- fixed_strings
strings -> print -> hello -> world -> print -> hello -> world -> print -> hello -> world -> print -> hello -> world -> print -> hello -> world -> print -> hello -> world -> print -> hello -> world -> ! -> ! -> ! -> ! -> ! -> ! -> ! -> 
------------------- Fixed_strings itrator
strings -> print -> hello -> world -> print -> hello -> world -> print -> hello -> world -> print -> hello -> world -> print -> 
length = 29 
length / 2 = 14 
------------------- Destroying fixed_strings
strings -> print -> hello -> world -> print -> hello -> world -> print -> hello -> world -> print -> hello -> world -> print -> hello -> world -> print -> hello -> world -> print -> hello -> world -> ! -> ! -> ! -> ! -> ! -> ! -> ! -> 
------------------- Integers 
723
------------------- Integers iterator
723
Center value: 2
length = 3 
length / 2 = 1 
327
------------------- Integers itrator
7 2 3 
length = 3 
------------------- Dynamic Strings
strings -> dyn strings -> strings -> 
strings -> dyn strings -> strings -> 
==[linkedlist]== 
==[linkedlist]== HEAP SUMMARY:
==[linkedlist]==     in use at exit: 0 bytes in 0 blocks
==[linkedlist]==   total heap usage: 84 allocs, 84 frees, 5,380 bytes allocated
==[linkedlist]== 
==[linkedlist]== All heap blocks were freed -- no leaks are possible
==[linkedlist]== 
==[linkedlist]== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

********************************************************************************
Testing pqueue
==[pqueue]== Memcheck, a memory error detector
==[pqueue]== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==[pqueue]== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==[pqueue]== Command: ./bin/pqueue
==[pqueue]== 
-----------------------
PQUEUE TEST 
-----------------------
peak 9
BREADTH FIRST PRINT
value 9 - priority 5
value 23 - priority 3
value 29 - priority 4
value 9 - priority -99999
-----------------------
BREADTH FIRST PRINT
value 69 - priority 9
value 9 - priority 5
value 29 - priority 4
value 9 - priority -99999
value 23 - priority 3
-----------------------
peak 69
DEQUEUEING...
BREADTH FIRST PRINT
value 9 - priority 5
value 23 - priority 3
value 29 - priority 4
value 9 - priority -99999
-----------------------
==[pqueue]== 
==[pqueue]== HEAP SUMMARY:
==[pqueue]==     in use at exit: 0 bytes in 0 blocks
==[pqueue]==   total heap usage: 11 allocs, 11 frees, 4,356 bytes allocated
==[pqueue]== 
==[pqueue]== All heap blocks were freed -- no leaks are possible
==[pqueue]== 
==[pqueue]== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

********************************************************************************
Testing queue
==[queue]== Memcheck, a memory error detector
==[queue]== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==[queue]== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==[queue]== Command: ./bin/queue
==[queue]== 
hello ,world ,! ,
world ,! ,
deck size : 100
is 8 there ? : yes
remaining card : 72
==[queue]== 
==[queue]== HEAP SUMMARY:
==[queue]==     in use at exit: 0 bytes in 0 blocks
==[queue]==   total heap usage: 608 allocs, 608 frees, 10,362 bytes allocated
==[queue]== 
==[queue]== All heap blocks were freed -- no leaks are possible
==[queue]== 
==[queue]== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

********************************************************************************
Testing ringbuffer
==[ringbuffer]== Memcheck, a memory error detector
==[ringbuffer]== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==[ringbuffer]== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==[ringbuffer]== Command: ./bin/ringbuffer
==[ringbuffer]== 
Data Size : 6
----------
Buffer Size  : 4096
Buffer write : 0
Buffer read  : 0
buffer data  : 
----------
hello
----------
Buffer Size  : 4096
Buffer write : 6
Buffer read  : 5
buffer data  : hello
----------
----------
Buffer Size  : 4096
Buffer write : 0
Buffer read  : 0
buffer data  : 
----------
==[ringbuffer]== 
==[ringbuffer]== HEAP SUMMARY:
==[ringbuffer]==     in use at exit: 0 bytes in 0 blocks
==[ringbuffer]==   total heap usage: 3 allocs, 3 frees, 4,573 bytes allocated
==[ringbuffer]== 
==[ringbuffer]== All heap blocks were freed -- no leaks are possible
==[ringbuffer]== 
==[ringbuffer]== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

********************************************************************************
Testing stack
==[stack]== Memcheck, a memory error detector
==[stack]== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==[stack]== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==[stack]== Command: ./bin/stack
==[stack]== 
2
3
23
==[stack]== 
==[stack]== HEAP SUMMARY:
==[stack]==     in use at exit: 0 bytes in 0 blocks
==[stack]==   total heap usage: 8 allocs, 8 frees, 4,188 bytes allocated
==[stack]== 
==[stack]== All heap blocks were freed -- no leaks are possible
==[stack]== 
==[stack]== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

********************************************************************************
Testing tree
==[tree]== Memcheck, a memory error detector
==[tree]== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==[tree]== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==[tree]== Command: ./bin/tree
==[tree]== 
MAX  : 389 
MIN  : 9 
SIZE : 21 
MAX  : 10000 
MIN  : 9 
SIZE : 22 
             (9,0)
         (29,1)
     (32,3)
                 (43,0)
             (45,1)
                 (47,0)
         (65,2)
                 (89,0)
             (105,1)
                 (195,0)
 (197,6)
     (198,5)
                 (209,0)
             (245,1)
                 (259,0)
         (267,4)
             (319,3)
                     (384,0)
                 (386,2)
                     (389,1)
                         (10000,0)
MAX  : 10000 
MIN  : 9 
SIZE : 21 
BREADTH FIRST PRINT
197 - lvl 0
32 - lvl 0
198 - lvl 0
29 - lvl 0
65 - lvl 0
267 - lvl 0
9 - lvl 0
45 - lvl 0
105 - lvl 0
245 - lvl 0
319 - lvl 0
43 - lvl 0
47 - lvl 0
89 - lvl 0
195 - lvl 0
209 - lvl 0
259 - lvl 0
386 - lvl 0
384 - lvl 0
389 - lvl 0
10000 - lvl 0
------------------- 
Tree iterator
SIZE : 21 
  1     9 - 
  2    29 - 
  3    43 - 
  4    47 - 
  5    45 - 
  6    89 - 
  7   195 - 
  8   105 - 
  9    65 - 
 10    32 - 
 11   209 - 
 12   259 - 
 13   245 - 
 14   384 - 
 15 10000 - 
 16   389 - 
 17   386 - 
 18   319 - 
 19   267 - 
 20   198 - 
 21   197 - 
 20   198 - 
 19   267 - 
 18   319 - 
 17   386 - 
 16   389 - 
 15 10000 - 
 14   384 - 
 13   245 - 
 12   259 - 
 11   209 - 
 10    32 - 
  9    65 - 
  8   105 - 
  7   195 - 
  6    89 - 
  5    45 - 
  4    47 - 
  3    43 - 
  2    29 - 
  1     9 - 
K ->  2
VALID HEAP
BREADTH FIRST PRINT
92 - 92 - 40 - 20 - 44 - 14 - 23 - 6 - 12 - 7 - 21 - 
             6
         20
             12
     92
             7
         44
             21
 92
         14
     40
         23
---------------
92 - 44 - 40 - 20 - 21 - 14 - 23 - 6 - 12 - 7 - 
---------------
VALID HEAP
92 - 69 - 69 - 20 - 44 - 40 - 23 - 6 - 12 - 7 - 21 - 14 - 
             6
         20
             12
     69
             7
         44
             21
 92
             14
         40
     69
         23

---------------

MAX  : 8 
MIN  : 2 
SIZE : 7 
----- original tree -------------------------
         (2,0)
     (3,1)
         (4,0)
 (5,2)
         (6,0)
     (7,1)
         (8,0)
----- rotated left tree ---------------------
             (2,0)
         (3,1)
             (4,0)
     (5,2)
         (6,0)
 (7,3)
     (8,0)
----- rotated right tree --------------------
     (2,0)
 (3,3)
         (4,0)
     (5,2)
             (6,0)
         (7,1)
             (8,0)
==[tree]== 
==[tree]== HEAP SUMMARY:
==[tree]==     in use at exit: 0 bytes in 0 blocks
==[tree]==   total heap usage: 134 allocs, 134 frees, 6,400 bytes allocated
==[tree]== 
==[tree]== All heap blocks were freed -- no leaks are possible
==[tree]== 
==[tree]== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

********************************************************************************
